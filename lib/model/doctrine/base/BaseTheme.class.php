<?php

/**
 * BaseTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property longtext $content
 * @property string $content_photo
 * @property longtext $intro
 * @property string $article_title
 * @property string $article_link
 * @property timestamp $publish_date
 * @property integer $module_id
 * @property integer $photo_album_id
 * @property string $approve
 * @property string $publish
 * @property boolean $is_hidden
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property integer $parent_id
 * @property string $last_modifier
 * @property ModuleCategory $ModuleCategory
 * @property PhotoAlbum $PhotoAlbum
 * @property Doctrine_Collection $Comment
 * 
 * @method string              getTitle()          Returns the current record's "title" value
 * @method longtext            getContent()        Returns the current record's "content" value
 * @method string              getContentPhoto()   Returns the current record's "content_photo" value
 * @method longtext            getIntro()          Returns the current record's "intro" value
 * @method string              getArticleTitle()   Returns the current record's "article_title" value
 * @method string              getArticleLink()    Returns the current record's "article_link" value
 * @method timestamp           getPublishDate()    Returns the current record's "publish_date" value
 * @method integer             getModuleId()       Returns the current record's "module_id" value
 * @method integer             getPhotoAlbumId()   Returns the current record's "photo_album_id" value
 * @method string              getApprove()        Returns the current record's "approve" value
 * @method string              getPublish()        Returns the current record's "publish" value
 * @method boolean             getIsHidden()       Returns the current record's "is_hidden" value
 * @method timestamp           getStartDate()      Returns the current record's "start_date" value
 * @method timestamp           getEndDate()        Returns the current record's "end_date" value
 * @method integer             getParentId()       Returns the current record's "parent_id" value
 * @method string              getLastModifier()   Returns the current record's "last_modifier" value
 * @method ModuleCategory      getModuleCategory() Returns the current record's "ModuleCategory" value
 * @method PhotoAlbum          getPhotoAlbum()     Returns the current record's "PhotoAlbum" value
 * @method Doctrine_Collection getComment()        Returns the current record's "Comment" collection
 * @method Theme               setTitle()          Sets the current record's "title" value
 * @method Theme               setContent()        Sets the current record's "content" value
 * @method Theme               setContentPhoto()   Sets the current record's "content_photo" value
 * @method Theme               setIntro()          Sets the current record's "intro" value
 * @method Theme               setArticleTitle()   Sets the current record's "article_title" value
 * @method Theme               setArticleLink()    Sets the current record's "article_link" value
 * @method Theme               setPublishDate()    Sets the current record's "publish_date" value
 * @method Theme               setModuleId()       Sets the current record's "module_id" value
 * @method Theme               setPhotoAlbumId()   Sets the current record's "photo_album_id" value
 * @method Theme               setApprove()        Sets the current record's "approve" value
 * @method Theme               setPublish()        Sets the current record's "publish" value
 * @method Theme               setIsHidden()       Sets the current record's "is_hidden" value
 * @method Theme               setStartDate()      Sets the current record's "start_date" value
 * @method Theme               setEndDate()        Sets the current record's "end_date" value
 * @method Theme               setParentId()       Sets the current record's "parent_id" value
 * @method Theme               setLastModifier()   Sets the current record's "last_modifier" value
 * @method Theme               setModuleCategory() Sets the current record's "ModuleCategory" value
 * @method Theme               setPhotoAlbum()     Sets the current record's "PhotoAlbum" value
 * @method Theme               setComment()        Sets the current record's "Comment" collection
 * 
 * @package    mgto
 * @subpackage model
 * @author     Jeremy and Andy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('theme');
        $this->hasColumn('title', 'string', 245, array(
             'type' => 'string',
             'length' => 245,
             ));
        $this->hasColumn('content', 'longtext', null, array(
             'type' => 'longtext',
             ));
        $this->hasColumn('content_photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('intro', 'longtext', null, array(
             'type' => 'longtext',
             ));
        $this->hasColumn('article_title', 'string', 245, array(
             'type' => 'string',
             'length' => 245,
             ));
        $this->hasColumn('article_link', 'string', 145, array(
             'type' => 'string',
             'length' => 145,
             ));
        $this->hasColumn('publish_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('module_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('photo_album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('approve', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('publish', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('is_hidden', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('last_modifier', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ModuleCategory', array(
             'local' => 'module_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PhotoAlbum', array(
             'local' => 'photo_album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'content_photo',
              3 => 'intro',
              4 => 'article_title',
              5 => 'is_hidden',
              6 => 'approve',
              7 => 'publish',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}