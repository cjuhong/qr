<?php

/**
 * BaseBanner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $group_id
 * @property string $image
 * @property string $clicks
 * @property string $views
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property integer $orders
 * @property string $link_url
 * @property string $link_target
 * @property boolean $is_hidden
 * @property integer $parent_id
 * @property string $parent_language
 * @property string $approve
 * @property string $publish
 * @property string $last_modifier
 * @property BannerGroup $BannerGroup
 * 
 * @method string      getName()            Returns the current record's "name" value
 * @method integer     getGroupId()         Returns the current record's "group_id" value
 * @method string      getImage()           Returns the current record's "image" value
 * @method string      getClicks()          Returns the current record's "clicks" value
 * @method string      getViews()           Returns the current record's "views" value
 * @method timestamp   getStartDate()       Returns the current record's "start_date" value
 * @method timestamp   getEndDate()         Returns the current record's "end_date" value
 * @method integer     getOrders()          Returns the current record's "orders" value
 * @method string      getLinkUrl()         Returns the current record's "link_url" value
 * @method string      getLinkTarget()      Returns the current record's "link_target" value
 * @method boolean     getIsHidden()        Returns the current record's "is_hidden" value
 * @method integer     getParentId()        Returns the current record's "parent_id" value
 * @method string      getParentLanguage()  Returns the current record's "parent_language" value
 * @method string      getApprove()         Returns the current record's "approve" value
 * @method string      getPublish()         Returns the current record's "publish" value
 * @method string      getLastModifier()    Returns the current record's "last_modifier" value
 * @method BannerGroup getBannerGroup()     Returns the current record's "BannerGroup" value
 * @method Banner      setName()            Sets the current record's "name" value
 * @method Banner      setGroupId()         Sets the current record's "group_id" value
 * @method Banner      setImage()           Sets the current record's "image" value
 * @method Banner      setClicks()          Sets the current record's "clicks" value
 * @method Banner      setViews()           Sets the current record's "views" value
 * @method Banner      setStartDate()       Sets the current record's "start_date" value
 * @method Banner      setEndDate()         Sets the current record's "end_date" value
 * @method Banner      setOrders()          Sets the current record's "orders" value
 * @method Banner      setLinkUrl()         Sets the current record's "link_url" value
 * @method Banner      setLinkTarget()      Sets the current record's "link_target" value
 * @method Banner      setIsHidden()        Sets the current record's "is_hidden" value
 * @method Banner      setParentId()        Sets the current record's "parent_id" value
 * @method Banner      setParentLanguage()  Sets the current record's "parent_language" value
 * @method Banner      setApprove()         Sets the current record's "approve" value
 * @method Banner      setPublish()         Sets the current record's "publish" value
 * @method Banner      setLastModifier()    Sets the current record's "last_modifier" value
 * @method Banner      setBannerGroup()     Sets the current record's "BannerGroup" value
 * 
 * @package    mgto
 * @subpackage model
 * @author     Jeremy and Andy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBanner extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('clicks', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('views', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'default' => '2012-10-31 23:59:59',
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'default' => '2199-12-31 23:59:59',
             ));
        $this->hasColumn('orders', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('link_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('link_target', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('is_hidden', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('parent_language', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('approve', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('publish', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('last_modifier', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BannerGroup', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'is_hidden',
              2 => 'link_url',
              3 => 'link_target',
              4 => 'parent_language',
              5 => 'start_date',
              6 => 'end_date',
              7 => 'orders',
              8 => 'image',
              9 => 'approve',
              10 => 'publish',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}