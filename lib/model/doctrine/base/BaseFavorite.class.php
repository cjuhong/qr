<?php

/**
 * BaseFavorite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_type_id
 * @property integer $article_id
 * @property integer $module_id
 * @property integer $user_id
 * @property boolean $is_favorite
 * @property string $opinion
 * @property ArticleType $ArticleType
 * @property Article $Article
 * @property ModuleCategory $ModuleCategory
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer        getArticleTypeId()   Returns the current record's "article_type_id" value
 * @method integer        getArticleId()       Returns the current record's "article_id" value
 * @method integer        getModuleId()        Returns the current record's "module_id" value
 * @method integer        getUserId()          Returns the current record's "user_id" value
 * @method boolean        getIsFavorite()      Returns the current record's "is_favorite" value
 * @method string         getOpinion()         Returns the current record's "opinion" value
 * @method ArticleType    getArticleType()     Returns the current record's "ArticleType" value
 * @method Article        getArticle()         Returns the current record's "Article" value
 * @method ModuleCategory getModuleCategory()  Returns the current record's "ModuleCategory" value
 * @method sfGuardUser    getSfGuardUser()     Returns the current record's "sfGuardUser" value
 * @method Favorite       setArticleTypeId()   Sets the current record's "article_type_id" value
 * @method Favorite       setArticleId()       Sets the current record's "article_id" value
 * @method Favorite       setModuleId()        Sets the current record's "module_id" value
 * @method Favorite       setUserId()          Sets the current record's "user_id" value
 * @method Favorite       setIsFavorite()      Sets the current record's "is_favorite" value
 * @method Favorite       setOpinion()         Sets the current record's "opinion" value
 * @method Favorite       setArticleType()     Sets the current record's "ArticleType" value
 * @method Favorite       setArticle()         Sets the current record's "Article" value
 * @method Favorite       setModuleCategory()  Sets the current record's "ModuleCategory" value
 * @method Favorite       setSfGuardUser()     Sets the current record's "sfGuardUser" value
 * 
 * @package    mgto
 * @subpackage model
 * @author     Jeremy and Andy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFavorite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('favorite');
        $this->hasColumn('article_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('module_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_favorite', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('opinion', 'string', 245, array(
             'type' => 'string',
             'length' => 245,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ArticleType', array(
             'local' => 'article_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ModuleCategory', array(
             'local' => 'module_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}