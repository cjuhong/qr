<?php

/**
 * BaseStaticContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property integer $category_id
 * @property longtext $content
 * @property string $page_name
 * @property string $image
 * @property string $doc
 * @property boolean $is_hidden
 * @property string $parent_language
 * @property string $is_link
 * @property string $link_target
 * @property string $approve
 * @property string $publish
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property integer $orders
 * @property string $last_modifier
 * @property StaticContentCategory $StaticContentCategory
 * 
 * @method string                getTitle()                 Returns the current record's "title" value
 * @method integer               getCategoryId()            Returns the current record's "category_id" value
 * @method longtext              getContent()               Returns the current record's "content" value
 * @method string                getPageName()              Returns the current record's "page_name" value
 * @method string                getImage()                 Returns the current record's "image" value
 * @method string                getDoc()                   Returns the current record's "doc" value
 * @method boolean               getIsHidden()              Returns the current record's "is_hidden" value
 * @method string                getParentLanguage()        Returns the current record's "parent_language" value
 * @method string                getIsLink()                Returns the current record's "is_link" value
 * @method string                getLinkTarget()            Returns the current record's "link_target" value
 * @method string                getApprove()               Returns the current record's "approve" value
 * @method string                getPublish()               Returns the current record's "publish" value
 * @method timestamp             getStartDate()             Returns the current record's "start_date" value
 * @method timestamp             getEndDate()               Returns the current record's "end_date" value
 * @method integer               getOrders()                Returns the current record's "orders" value
 * @method string                getLastModifier()          Returns the current record's "last_modifier" value
 * @method StaticContentCategory getStaticContentCategory() Returns the current record's "StaticContentCategory" value
 * @method StaticContent         setTitle()                 Sets the current record's "title" value
 * @method StaticContent         setCategoryId()            Sets the current record's "category_id" value
 * @method StaticContent         setContent()               Sets the current record's "content" value
 * @method StaticContent         setPageName()              Sets the current record's "page_name" value
 * @method StaticContent         setImage()                 Sets the current record's "image" value
 * @method StaticContent         setDoc()                   Sets the current record's "doc" value
 * @method StaticContent         setIsHidden()              Sets the current record's "is_hidden" value
 * @method StaticContent         setParentLanguage()        Sets the current record's "parent_language" value
 * @method StaticContent         setIsLink()                Sets the current record's "is_link" value
 * @method StaticContent         setLinkTarget()            Sets the current record's "link_target" value
 * @method StaticContent         setApprove()               Sets the current record's "approve" value
 * @method StaticContent         setPublish()               Sets the current record's "publish" value
 * @method StaticContent         setStartDate()             Sets the current record's "start_date" value
 * @method StaticContent         setEndDate()               Sets the current record's "end_date" value
 * @method StaticContent         setOrders()                Sets the current record's "orders" value
 * @method StaticContent         setLastModifier()          Sets the current record's "last_modifier" value
 * @method StaticContent         setStaticContentCategory() Sets the current record's "StaticContentCategory" value
 * 
 * @package    mgto
 * @subpackage model
 * @author     Jeremy and Andy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStaticContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('static_content');
        $this->hasColumn('title', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('content', 'longtext', null, array(
             'type' => 'longtext',
             ));
        $this->hasColumn('page_name', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('image', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('doc', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_hidden', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('parent_language', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('is_link', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('link_target', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('approve', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('publish', 'string', 50, array(
             'type' => 'string',
             'default' => 'No',
             'length' => 50,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('orders', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('last_modifier', 'string', 55, array(
             'type' => 'string',
             'length' => 55,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StaticContentCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'parent_language',
              3 => 'is_hidden',
              4 => 'link_target',
              5 => 'is_link',
              6 => 'approve',
              7 => 'publish',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}